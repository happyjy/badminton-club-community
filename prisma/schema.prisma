generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                 Int                  @id @default(autoincrement())
  kakaoId            String               @unique @default("")
  email              String               @unique
  nickname           String               @default("")
  thumbnailImageUrl  String               @default("")
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @default(now()) @updatedAt
  ClubMember         ClubMember[]
  WorkoutParticipant WorkoutParticipant[]
}

model Workout {
  id                 Int                  @id @default(autoincrement())
  title              String
  description        String               @default("")
  date               DateTime
  startTime          DateTime
  endTime            DateTime
  maxParticipants    Int
  location           String
  createdAt          DateTime             @default(now())
  updatedAt          DateTime
  clubId             Int?
  club               Club?                @relation(fields: [clubId], references: [id])
  WorkoutParticipant WorkoutParticipant[]
}

model WorkoutParticipant {
  id        Int      @id @default(autoincrement())
  workoutId Int
  userId    Int
  status    String   @default("PENDING")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id])
  Workout   Workout  @relation(fields: [workoutId], references: [id])

  @@unique([workoutId, userId])
}

model Club {
  // 스키마 필드 설정
  id          Int          @id @default(autoincrement())
  name        String
  description String?
  location    String
  meetingTime String
  maxMembers  Int
  etc         String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  // 관계 필드 설정
  members     ClubMember[]
  workouts    Workout[]
}

model ClubMember {
  id                     Int      @id @default(autoincrement())
  clubId                 Int
  userId                 Int
  role                   String   @default("MEMBER")
  status                 String   @default("PENDING")
  name                   String?
  birthDate              String?
  localTournamentLevel   String?
  nationalTournamentLevel String?
  lessonPeriod          String?
  playingPeriod         String?
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  club                  Club     @relation(fields: [clubId], references: [id])
  user                  User     @relation(fields: [userId], references: [id])

  @@unique([clubId, userId])
}
